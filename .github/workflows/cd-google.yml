name: Build and Deploy to GKE

on:
  create:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-1
  GKE_ZONE: southamerica-east1-a
  BACK_DEPLOYMENT_NAME: backend-deployment
  CONTAINER_NAME: backend

jobs:
  setup-build-publish-deploy:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v0.2.1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    - name: Branch name
      id: branch_name
      run: |
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
          
    - name: Build base image
      run: |
          echo $SOURCE_TAG
      env:
          SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}     

####################################################################################################################################

    # Build the Backend Docker image
    - name: Build-BACKEND
      working-directory: ./backend
      run: |-
        docker build . -t "gcr.io/$PROJECT_ID/backend:${{SOURCE_TAG}"
          
   # Push the Backend Docker image to Google Container Registry
    - name: Publish-BACKEND
      working-directory: ./backend
      run: |-
        docker push "gcr.io/$PROJECT_ID/backend:${{SOURCE_TAG}}"


    # Deploy images to the GKE cluster
    - name: Deploy
      run: |-
        kubectl apply -f release/k8s-manifests.yml
        kubectl set image deployment $BACK_DEPLOYMENT_NAME gcr.io/$PROJECT_ID/backend:${{SOURCE_TAG}}
        kubectl rollout status deployment/$BACK_DEPLOYMENT_NAME
        kubectl get services -o wide
      
